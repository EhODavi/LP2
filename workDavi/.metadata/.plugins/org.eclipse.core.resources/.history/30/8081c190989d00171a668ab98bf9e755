package br.cefetmg.RVCA.ui;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import br.cefetmg.RVCA.controle.EmpresaCliente;
import br.cefetmg.RVCA.controle.Sistema;

public class UIPrincipal {
	private static Scanner scn = new Scanner(System.in);

	public static void main(String[] args) {
		Sistema banco = new Sistema();
		UIEmpresaCliente uiEmpresaCliente = new UIEmpresaCliente();
		UIInventarioEstoque uiInventarioEstoque = new UIInventarioEstoque();
		UILogin uiLogin = new UILogin();
		UIPrincipal uiPrincipal = new UIPrincipal();
		UIProduto uiProduto = new UIProduto();

		int opcao = 0;
		int opcaoCC = 0;
		boolean logico;

		logico = false;
		// ----------------------------------------------
		do {
			System.out.println("------   RVCA Contabilidade   ------\n");
			System.out.println("1 - Logar");
			System.out.println("2 - Nova Conta");
			opcao = scn.nextInt();

			switch (opcao) {
			case 1:
				logico = uiLogin.buscarLogin();
				break;
			case 2:
				logico = uiLogin.adicionarLogin();
				break;
			default:
				System.out.println("\nOpcao inválida!!!\n");
			}
		} while (logico == false);

		do {
			System.out.println("------   RVCA Contabilidade   ------\n");
			System.out.println("1 - Entrar como Contador");
			System.out.println("2 - Entrar como Cliente");
			System.out.println("0 - Sair");
			opcao = scn.nextInt();

			switch (opcao) {
			case 0:
				System.out.println("\nAté mais\n");
				break;
			case 1:
				do {
					System.out.println("------   RVCA Contabilidade   ------\n");
					System.out.println("1 - Cadastrar uma Empresa Cliente");
					System.out.println("2 - Alterar uma Empresa Cliente");
					System.out.println("3 - Excluir uma Empresa Cliente");
					System.out.println("4 - Listar as Empresas Clientes");
					System.out.println("0 - Retornar ao Menu Principal");
					opcaoCC = scn.nextInt();
					switch (opcaoCC) {
					case 1:
						uiEmpresaCliente.adicionarEmpresa();
						break;
					case 2:
						uiEmpresaCliente.alterarEmpresa();
						break;
					case 3:
						uiEmpresaCliente.excluirEmpresa();
						break;
					case 4:
						uiEmpresaCliente.listarEmpresa();
						break;
					case 0:
						break;
					default:
						System.out.println("\nOpcao inválida!!!\n");
					}
				} while (opcaoCC != 0);
				break;
			case 2:
				System.out.println("\n------   Empresas Clientes Disponíveis   ------\n");
				List<EmpresaCliente> clientes = banco.listarEmpresa();
				logico = listarEmpresa(clientes);
				int codigo;
				if (logico != false) {
					codigo = lerCodigo();
					if (banco.buscarEmpresa(codigo) != null) {
						do {
							System.out.println("------   " + banco.buscarEmpresa(codigo).getNome() + "   ------\n");
							System.out.println("1 - Cadastrar um produto do Inventário do Estoque");
							System.out.println("2 - Alterar um produto do Inventário do Estoque");
							System.out.println("3 - Excluir um produto do Inventário do Estoque");
							System.out.println("4 - Listar o Inventário do Estoque");
							System.out.println("0 - Retornar para o Menu Principal");
							opcaoCC = scn.nextInt();
							switch (opcaoCC) {
							case 1:
								System.out
										.println("\n------   Cadastrar um produto do Inventário do Estoque   ------\n");
								Produto produto = lerProduto();
								if (banco.buscarEmpresa(codigo).getInventario().adicionarProduto(produto)) {
									System.out.println("\nInsercao realizada com sucesso!!!\n");
								} else {
									System.out.println("\nFalha na inserção!!!\n");
								}
								break;
							case 2:
								System.out.println("\n------   Alterar um Produto do Inventario do Estoque   ------\n");
								logico = listarInventario(banco.buscarEmpresa(codigo));
								int codigoProduto;
								if (logico != false) {
									codigoProduto = lerCodigo();
									Produto p = banco.buscarEmpresa(codigo).getInventario()
											.buscarProduto(codigoProduto);
									alterarProduto(p);
									if (banco.buscarEmpresa(codigo).getInventario().alterarProduto(p)) {
										System.out.println("\nAlteracao realizada com sucesso!!!\n");
									} else {
										System.out.println("\nFalha na alteracao!!!\n");
									}
								}
								break;
							case 3:
								System.out.println("\n------   Excluir um Produto do Inventario do Estoque   ------\n");
								logico = listarInventario(banco.buscarEmpresa(codigo));
								if (logico != false) {
									codigoProduto = lerCodigo();
									if (banco.buscarEmpresa(codigo).getInventario().excluirProduto(codigoProduto)) {
										System.out.println("\nExclusão realizada com sucesso!!!\n");
									} else {
										System.out.println("\nFalha na exclusao!!!\n");
									}
								}
								break;
							case 4:
								System.out.println("\n------   Listar o Inventario do Estoque   ------\n");
								listarInventario(banco.buscarEmpresa(codigo));
								break;
							case 0:
								break;
							default:
								System.out.println("\nOpcao invalida!!!\n");
							}
						} while (opcaoCC != 0);
					} else {
						System.out.println("\nOpção inválida!!!\n");
					}
				}
				break;
			default:
				System.out.println("\nOpcao inválida!!!\n");
			}
		} while (opcao != 0);
	}

	

	// -------------------------------------------------------
	private static Produto lerProduto() { // OK
		System.out.print("\nInforme o Nome do Produto: ");
		String nome = scn.next();
		System.out.print("Informe a Categoria do Produto: ");
		String categoria = scn.next();
		System.out.print("Informe a Unidade de Medida do Produto: ");
		String unidadeMedida = scn.next();
		System.out.print("Informe o Valor por Unidade de Medida do Produto: ");
		double valorPorUnidadeMedida = scn.nextDouble();
		System.out.print("Informe a Quantidade do Produto: ");
		int quantidade = scn.nextInt();
		System.out.println();
		Produto p = Produto.newInstance(categoria, valorPorUnidadeMedida, nome, quantidade, unidadeMedida);
		return p;
	}

	// --------------------------------------------------------
	

	// -----------------------------------------------------------
	

	// -----------------------------------------------------------

	

	// -------------------------------------------------------------
	private static void alterarProduto(Produto p) { // OK
		if (p != null) {
			int opcao;

			do {
				System.out.println("\nCodigo do Produto: " + p.getCodigo());
				System.out.println("1 - Nome do Produto: " + p.getNome());
				System.out.println("2 - Unidade de Medida do Produto: " + p.getUnidadeMedida());
				System.out.println("3 - Valor Unitário do Produto: R$" + p.getValorPorUnidadeMedida());
				System.out.println("4 - Quantidade do Produto: " + p.getQuantidade());
				System.out.print("Escolha qual campo deseja alterar (0 - Sair): ");
				opcao = scn.nextInt();

				switch (opcao) {
				case 1:
					System.out.print("\nNovo Nome do Produto: ");
					String nome = scn.next();
					p.setNome(nome);
					break;
				case 2:
					System.out.print("\nNova Unidade de Medida do Produto: ");
					String unidadeMedida = scn.next();
					p.setUnidadeMedida(unidadeMedida);
					break;
				case 3:
					System.out.print("\nNovo Valor Unitário do Produto: ");
					double valorPorUnidadeMedida = scn.nextDouble();
					p.setValorPorUnidadeMedida(valorPorUnidadeMedida);
					break;
				case 4:
					System.out.print("\nNova Quantidade do Produto: ");
					int quantidade = scn.nextInt();
					p.setQuantidade(quantidade);
					break;
				default:
					break;
				}
			} while (opcao != 0);
		}
	}

	// ------------------------------------------------------------
	

	
}
